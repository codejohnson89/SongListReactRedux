{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","onClick","selectSong","title","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"sLAIMA,E,2KACY,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,wBACAC,QAAS,kBAAM,EAAKL,MAAMM,WAAWH,IACrCC,UAAU,oBAFV,sBAOJ,qBAAKA,UAAU,UAAf,SACKD,EAAKI,UAVaJ,EAAKI,Y,+BAiBxC,OAAO,qBAAKH,UAAU,kBAAf,SAAkCL,KAAKS,mB,GArB/BC,aA6BRC,eAJS,SAACC,GACrB,MAAO,CAAEV,MAAOU,EAAMV,SAGc,CAAEK,WChChB,SAACH,GAEvB,MAAO,CACHS,KAAM,gBACNC,QAASV,KD4BFO,CAAyCZ,GEZzCY,eAJS,SAACC,GACrB,MAAO,CAAER,KAAMQ,EAAMG,gBAGVJ,EAlBI,SAAC,GAAY,IAAXP,EAAU,EAAVA,KACjB,OAAKA,EAKG,gCACI,8CACA,wCAAWA,EAAKI,SAChB,2CAAcJ,EAAKY,eAPpB,mDCcAC,EAfH,WACR,OACA,qBAAKZ,UAAU,oBAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,YCmBDa,cAAgB,CAC3BhB,MA9BiB,WACjB,MAAO,CACH,CACIM,MAAO,cACPQ,SAAU,QAEd,CACIR,MAAO,WACPQ,SAAU,QAEd,CACIR,MAAO,YACPQ,SAAU,QAEd,CACIR,MAAO,MACPQ,SAAU,UAelBD,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,MAAmB,kBAAhBA,EAAON,KACCM,EAAOL,QAGXC,KCnBXK,IAASC,OACL,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACI,cAAC,EAAD,MAERC,SAASC,cAAc,Y","file":"static/js/main.bf065242.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component {\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button\r\n                        onClick={() => this.props.selectSong(song)} \r\n                        className=\"ui button primary\"\r\n                        >\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        {song.title}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n    render() {\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { songs: state.songs };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList);","// Action creator\r\nexport const selectSong = (song) => {\r\n    // Return an action\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({song}) => {\r\n    if (!song) {\r\n        return <div>Select a song</div>\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                <h3>Details for:</h3>\r\n                <p>Title: {song.title}</p>\r\n                <p>Duration: {song.duration}</p>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return { song: state.selectedSong }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(SongDetail)","import React from 'react';\r\nimport SongList from './SongList'\r\nimport SongDetail from './SongDetail';\r\n\r\nconst App = () => {\r\n    return (\r\n    <div className=\"ui container grid\">\r\n        <div className=\"ui row\">\r\n            <div className=\"column eight wide\">\r\n                <SongList/>\r\n            </div>\r\n            <div className=\"column eight wide\">\r\n                <SongDetail />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        {\r\n            title: 'My Sunshine',\r\n            duration: '2:45'\r\n        },\r\n        {\r\n            title: 'All Star',\r\n            duration: '3:56'\r\n        },\r\n        {\r\n            title: 'Chop Suey',\r\n            duration: '4:14'\r\n        },\r\n        {\r\n            title: 'Bad',\r\n            duration: '2:59'\r\n        }\r\n    ]\r\n}\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if(action.type === 'SONG_SELECTED') {\r\n        return action.payload\r\n    }\r\n\r\n    return selectedSong;\r\n} \r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux'\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>, \r\ndocument.querySelector('#root'));"],"sourceRoot":""}